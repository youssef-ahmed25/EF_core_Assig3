// <auto-generated />
using System;
using EF_core_Assig3.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_core_Assig3.Migrations
{
    [DbContext(typeof(ITIDB))]
    [Migration("20250829153825_DeptandInstablesWithRealtion")]
    partial class DeptandInstablesWithRealtion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_core_Assig3.Entity.Course", b =>
                {
                    b.Property<int>("cors_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cors_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("cors_ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Department", b =>
                {
                    b.Property<int>("dept_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dept_ID"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("ins_ID")
                        .HasColumnType("int");

                    b.HasKey("dept_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Instructor", b =>
                {
                    b.Property<int>("ins_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ins_ID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Bouns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("HourRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasKey("ins_ID");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Stud_Course", b =>
                {
                    b.Property<int>("stud_ID")
                        .HasColumnType("int");

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("stud_ID", "Course_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Student", b =>
                {
                    b.Property<int>("stud_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stud_ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("second");

                    b.HasKey("stud_ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Instructor", b =>
                {
                    b.HasOne("EF_core_Assig3.Entity.Department", "InsDepartment")
                        .WithMany("Instructors")
                        .HasForeignKey("Dept_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsDepartment");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Stud_Course", b =>
                {
                    b.HasOne("EF_core_Assig3.Entity.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_core_Assig3.Entity.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("stud_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Department", b =>
                {
                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("EF_core_Assig3.Entity.Student", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
